SELECT * FROM TEST002 t ;
--ROLE : 권한이 뭉쳐있는(모여있는)상태
--connect, resource, dba(거의 모든 권한)
--GRANT ROLE명,... TO 계정명
--REVOKE ROLE명 FROM 계정명

--A라는 계정의 테이블에 DML을 사용하기 위해서는 반드시 A라는 계정으로부터 권한을 부여받아야 한다.

CREATE TABLE COPY_PLAYER AS SELECT * FROM HR.PLAYER;

SELECT * FROM COPY_PLAYER CP JOIN HR.TEAM T 
ON CP.TEAM_ID = T.TEAM_ID;

--SCOTT 테이블에서 SALGRADE 복사 후 GRADE 컬럼명 LEVEL로 변경후 값을 반대로 변경

CREATE TABLE copy_salgrade AS SELECT * FROM scott.SALGRADE s;

SELECT * FROM COPY_SALGRADE ;

ALTER TABLE COPY_SALGRADE RENAME COLUMN GRADE TO "LEVEL";

UPDATE COPY_SALGRADE 
SET "LEVEL" = 6-"LEVEL";

--SCOTT 계정의 EMP 테이블을 복사해서 비등가 조인으로 등급별 ENAME과 SAL 검색
CREATE TABLE COPY_EMP AS SELECT * FROM SCOTT.EMP;

SELECT  CE.ENAME, CE.SAL, CS."LEVEL" FROM COPY_EMP CE JOIN COPY_SALGRADE CS
ON CE.SAL BETWEEN CS.LOSAL AND CS.HISAL
ORDER BY "LEVEL";

--HR 계정의 DEPT 테이블 복사 후 LOC별 평균 급여 검색(단 LOC은 모두검색)

CREATE TABLE COPY_DEPT AS SELECT * FROM HR.DEPT;

SELECT AVG(CE.SAL),CD.LOC
FROM COPY_EMP CE RIGHT OUTER JOIN COPY_DEPT CD 
USING(DEPTNO)
GROUP BY CD.LOC;

CREATE VIEW PLAYER_AGE 
AS (SELECT ROUND((SYSDATE - BIRTH_DATE)/365) AGE,P.* 
FROM COPY_PLAYER P);

SELECT * FROM PLAYER_AGE 
WHERE AGE >30;

SELECT * FROM PLAYER_AGE;
SELECT * FROM COPY_PLAYER ;

DROP VIEW PLAYER_AGE ;


--EMPLOYEES 테이블에서 사원이름과 그 사원의 매니저 이름이 있는 VIEW를 만들기
CREATE TABLE COPY_EMPLOYEES AS SELECT * FROM HR.EMPLOYEES;

SELECT * FROM COPY_EMPLOYEES ;

CREATE VIEW EMP_WITH_MANAGER AS 
(SELECT CP2.FIRST_NAME MNAME ,CP1.FIRST_NAME ENAME
FROM COPY_EMPLOYEES CP1 JOIN COPY_EMPLOYEES CP2
ON CP1.MANAGER_ID = CP2.EMPLOYEE_ID);

SELECT * FROM EMP_WITH_MANAGER ;
--STEVEN의 사원 목록 조회
SELECT COUNT(*) FROM EMP_WITH_MANAGER 
WHERE "매니저 이름" = 'Steven';

CREATE TABLE COPY_TEAM AS SELECT * FROM HR.TEAM t ;

--PLAYER 테이블에 TEAM_NAME을 추가한 VIEW만들기
CREATE VIEW PLAYER_TEAM_NAME AS(SELECT CT.TEAM_NAME, CP.*
	FROM COPY_PLAYER CP INNER JOIN COPY_TEAM CT 
	ON CP.TEAM_ID = CT.TEAM_ID 
);

SELECT * FROM PLAYER_TEAM_NAME ;

SELECT * FROM PLAYER_TEAM_NAME WHERE TEAM_NAME ='울산현대';

--HOMETEAM_ID, STADIUM_NAME, TEAM_NAME 검색
--HOMETEAM이 없는 경기장 이름도 검색하고 VEIW만들기
--이 VIEW에서 TEAM_NAME이 NULL인 경기장 검색

CREATE TABLE COPY_STADIUM AS SELECT * FROM HR.STADIUM;

SELECT * FROM HR.STADIUM;

CREATE VIEW ALL_STADIUM_NAME AS(
	SELECT CS.HOMETEAM_ID , CS.STADIUM_NAME , CT.TEAM_NAME 
	FROM COPY_STADIUM cs LEFT OUTER JOIN COPY_TEAM ct 
	ON CS.HOMETEAM_ID = CT.TEAM_ID 
);

SELECT * FROM ALL_STADIUM_NAME
WHERE TEAM_NAME IS NULL;

--EMPLOYEES 테이블에서 사원들의FIRST_NAME 모두 검색
--사원들 중에서 매니저들은 그 JOB_ID검색
--VIEW로 만들고 매니저가 아니면서 FIRST_NAME이 A로시작하는 사원 검색

SELECT * FROM COPY_EMPLOYEES ce ;

CREATE VIEW MANAGER_VIEW AS( 
	SELECT CASE 
		WHEN CE.EMPLOYEE_ID IN(SELECT MANAGER_ID FROM COPY_EMPLOYEES)
					THEN CE.JOB_ID
					ELSE CE.FIRST_NAME
	END MAG , CE.*
	FROM COPY_EMPLOYEES ce 
);
DROP VIEW MANAGER_VIEW ;
SELECT * FROM MANAGER_VIEW ;

SELECT FIRST_NAME
FROM MANAGER_VIEW 
WHERE MAG = FIRST_NAME AND FIRST_NAME LIKE 'A%';

CREATE VIEW MANAGER_INFO AS(
	 SELECT CE1.* FROM COPY_EMPLOYEES ce1 INNER JOIN COPY_EMPLOYEES ce2
	 ON CE1.EMPLOYEE_ID = CE2.MANAGER_ID 
);

SELECT * FROM MANAGER_INFO ;

SELECT FIRST_NAME FROM(
SELECT CE1.FIRST_NAME ,CE2.JOB_ID FROM COPY_EMPLOYEES ce1 LEFT OUTER JOIN COPY_EMPLOYEES ce2
ON CE1.EMPLOYEE_ID = CE2.MANAGER_ID)
WHERE JOB_ID IS NULL AND FIRST_NAME LIKE 'A%';